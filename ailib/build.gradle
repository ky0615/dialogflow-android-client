apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            buildConfigField "int", "TESTS_SDK", "22"
        }
        debug{
            buildConfigField "int", "TESTS_SDK", "22"
        }
    }
    productFlavors {
    }

    packagingOptions {
    }
}

dependencies {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'ai.api:libai:1.6.11'
    implementation 'ai.api:sdk:2.0.5@aar'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'commons-io:commons-io:2.4'

    testImplementation 'org.slf4j:slf4j-android:1.7.25'
    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:1.7.0"
    testImplementation "org.robolectric:robolectric:3.1.2"
}

apply from: '../gradle-mvn-push.gradle'

// block for building library jars
android.libraryVariants.all { variant ->
  def name = variant.buildType.name
  def task = project.tasks.create "jar${name.capitalize()}", Jar
  task.dependsOn variant.javaCompile
  task.from variant.javaCompile.destinationDir
  artifacts.add('archives', task);
}